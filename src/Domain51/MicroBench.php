<?php

class Domain51_MicroBench
{
    private $_file = null;
    private $_sections = array();

    public function loadFromFile($file) 
    {
        $this->_file = $file;
        $this->_readSectionsFromFile();
    }

    private function _readSectionsFromFile()
    {
        $lines = file($this->_file);
        foreach ($lines as $line) {
            if (substr($line, 0, 2) == '//') {
                $section_name = trim(substr($line, 2));
                continue;
            }

            if (isset($section_name)) {
                if (!isset($this->_sections[$section_name])) {
                    $this->_sections[$section_name] = '';
                }
                $this->_sections[$section_name] .= $line;
            }
        }
    }

    public function save() 
    {
        $output_file = dirname($this->_file) . '/' . basename($this->_file, '.php') . '-bench.php';
        $date = date(DATE_RFC822);
        $output = '<?php
/**
 * Generated by Domain51_MicroBench
 * @date ' . $date . '
 */

/**
 * Start custom setup code
 */
' . trim($this->_sections['setup']) . '

/**
 * End custom setup code
 */

$_Domain51_MicroBench_total = isset($argv[1]) && (int)$argv[1] == $argv[1] ? (int)$argv[1] : 1000;
ob_start();

$_Domain51_MicroBench_start = microtime(true);
for ($i = 0; $i < $_Domain51_MicroBench_total; ++$i) {
    /**
     * Start code to benchmark
     */

    ' . trim($this->_sections['test']) . '

    /**
     * End code to benchmark
     */
}
$_Domain51_MicroBench_end = microtime(true);


printf(
    "took %s seconds to execute code %s times (%s reqs/second)\n",
    round($_Domain51_MicroBench_end - $_Domain51_MicroBench_start, 5),
    $_Domain51_MicroBench_total,
    round($_Domain51_MicroBench_total / ($_Domain51_MicroBench_end - $_Domain51_MicroBench_start))
);
';        
        file_put_contents($output_file, $output);
    }
}

